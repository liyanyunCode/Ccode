//判断是否是变种水仙花数，把任意的数字从中间拆分成两个数
//比如1461可以拆成（1，461），（14，61），（146，1）如果
//所有拆分后的乘积之和等于自身，就是一个Liiy Number
//例如：655=6*55+65*5
//求五位数中的所有变种变种水仙花数

#include<stdio.h>
//int main()
//{
//	int i = 0;
//	for (i = 10000; i < 99999; i++)
//	{
//		int j = 0;
//		int sum = 0;
//
//		for (j = 10; j <= 1000 ; j*=10)
//		{
//			sum += (i % j) * (i / j);
//		}
//
//		if (sum == i)
//		{
//			printf("%d ", i);
//		}
//	}
//
//	return 0;
//
//}

//不适用累计乘法的基础上，通过位移运算实现2的n次方运算
//多组输入，每一行输入一个整数n
//针对每组输入输出相应的2的n次方的结果

#define _CRT_SECURE_NO_WARNINGS 1
//int main()
//{
//	int n = 1;
//	while (scanf("%d",&n)!=EOF)
//	{
//		printf("%d", 1 << n);
//	}
//	return 0;
//}